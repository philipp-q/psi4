#! PE-SCF of PNA in presence of 6 water molecules
#! RHF Reference data from Dalton
#! UHF data in good faith because PCM version looks fine

ref_pe_energy = -0.03424830892844 #TEST
ref_scf_energy = -482.9411084900 #TEST

exc_energies = [  #TEST
    0.14366763, #TEST
    0.15492819, #TEST
    0.24641827, #TEST
    0.25335815, #TEST
    0.25716370, #TEST
] #TEST

osc_strengths = [ #TEST
    4.40691123e-06, #TEST
    8.93210578e-05, #TEST
    4.32081257e-01, #TEST
    1.13168661e-01, #TEST
    1.90262828e-02, #TEST
] #TEST

pe_uhf = -0.0205612607760474  #TEST
scf_uhf =-54.8574855299258388 #TEST

exc_uhf = [  #TEST
0.10127093659047763,  #TEST
0.36026243740116887, #TEST
0.4991013815039879, #TEST
0.5097654655683802, #TEST
0.5542193540734713, #TEST
] #TEST

osc_uhf = [  #TEST
0.005726019396442727,  #TEST
1.1052876769210551e-08, #TEST
4.1341553724988216e-06, #TEST
0.0015188940376984871, #TEST
0.0006496149064569229, #TEST
]  #TEST


molecule pna {
C          8.64800        1.07500       -1.71100
C          9.48200        0.43000       -0.80800
C          9.39600        0.75000        0.53800
C          8.48200        1.71200        0.99500
C          7.65300        2.34500        0.05500
C          7.73200        2.03100       -1.29200
H         10.18300       -0.30900       -1.16400
H         10.04400        0.25200        1.24700
H          6.94200        3.08900        0.38900
H          7.09700        2.51500       -2.01800
N          8.40100        2.02500        2.32500
N          8.73400        0.74100       -3.12900
O          7.98000        1.33100       -3.90100
O          9.55600       -0.11000       -3.46600
H          7.74900        2.71100        2.65200
H          8.99100        1.57500        2.99500
symmetry c1
no_reorient
no_com
}

set {
 basis sto-3g
 pe true
 e_convergence 8
 d_convergence 6
 scf_type pk
 tdscf_states 5
}

set pe {
 potfile pna_6w.pot
}

scf_energy, wfn = energy("TD-SCF", return_wfn=True)
print_variables()

compare_values(ref_pe_energy, wfn.variable("PE ENERGY"), 6, "PE Energy contribution") #TEST
compare_values(ref_scf_energy, scf_energy, 6, "Total PE-SCF Energy") #TEST

e_calc = []
r_calc = []
for i in range(5):
    e_calc.append(variable(f'TD-HF ROOT 0 -> ROOT {i+1} EXCITATION ENERGY - A SYMMETRY'))
    r_calc.append(variable(f'TD-HF ROOT 0 -> ROOT {i+1} OSCILLATOR STRENGTH (LEN) - A SYMMETRY'))
compare_arrays(exc_energies, e_calc, 4, f'PE EXCITATION ENERGY') #TEST
compare_arrays(osc_strengths, r_calc, 4, f'PE OSCILLATOR STRENGTH') #TEST

molecule NH2 {
0, 2
N  0.000000000000     0.000000000000    -0.079859033927
H  0.000000000000    -0.803611003426     0.554794694632
H  0.000000000000     0.803611003426     0.554794694632
symmetry c1
no_reorient
}
set reference uhf
scf_energy, uwfn = energy("TD-SCF", return_wfn=True)
compare_values(pe_uhf, uwfn.variable("PE ENERGY"), 6, "UHF PE Energy contribution") #TEST
compare_values(scf_uhf, scf_energy, 6, "Total PE-UHF Energy") #TEST
e_calc = []
r_calc = []
for i in range(5):
    e_calc.append(variable(f'TD-HF ROOT 0 -> ROOT {i+1} EXCITATION ENERGY - A SYMMETRY'))
    r_calc.append(variable(f'TD-HF ROOT 0 -> ROOT {i+1} OSCILLATOR STRENGTH (LEN) - A SYMMETRY'))
compare_arrays(exc_uhf, e_calc, 4, f'UHF PE EXCITATION ENERGY') #TEST
compare_arrays(osc_uhf, r_calc, 4, f'UHF PE OSCILLATOR STRENGTH') #TEST
